<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:media="clr-namespace:FluentAvalonia.UI.Media;assembly=FluentAvalonia"
             xmlns:sty="using:FluentAvalonia.Styling">

	<Design.PreviewWith>
		<Border Padding="50">
			<StackPanel Spacing="10">
				<TextBox/>
				<TextBox IsEnabled="False" Text="Hello好 Down there"/>
				<TextBox Watermark="Watermark" />
				<TextBox Text="Test" IsEnabled="False" />
				<TextBox Text="Test Clear" Classes="clearButton" />
				<TextBox Text="Test Password" Classes="revealPasswordButton" PasswordChar="*" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<Styles.Resources>
		<Thickness x:Key="TextBoxTopHeaderMargin">0,0,0,8</Thickness>
		<Thickness x:Key="TextBoxInnerButtonMargin">0,4,4,4</Thickness>
		<x:Double x:Key="TextBoxIconFontSize">12</x:Double>


		<ui:TextCommandBarFlyout x:Key="DefaultTextBoxContextFlyout" />
		<!--<MenuFlyout x:Key="DefaultTextBoxContextFlyout">
			<MenuItem x:Name="TextBoxContextMenuCutItem" Header="Cut" Command="{Binding $parent[TextBox].Cut}" IsEnabled="{Binding $parent[TextBox].CanCut}" InputGesture="{x:Static TextBox.CutGesture}" />
			<MenuItem x:Name="TextBoxContextMenuCopyItem" Header="Copy" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static TextBox.CopyGesture}"/>
			<MenuItem x:Name="TextBoxContextMenuPasteItem" Header="Paste" Command="{Binding $parent[TextBox].Paste}" IsEnabled="{Binding $parent[TextBox].CanPaste}" InputGesture="{x:Static TextBox.PasteGesture}"/>
		</MenuFlyout>-->
	</Styles.Resources>

	<Style Selector="TextBox">
		<Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
		<Setter Property="Background" Value="{DynamicResource TextControlBackground}" />
		<Setter Property="CaretBrush" Value="{DynamicResource TextControlForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}" />
		<Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}" />
		<Setter Property="SelectionForegroundBrush" Value="{DynamicResource TextOnAccentFillColorSelectedTextBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
		<Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
		<Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
		<Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
		<Setter Property="FocusAdorner" Value="{x:Null}" />
		<Setter Property="ContextFlyout" Value="{StaticResource DefaultTextBoxContextFlyout}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors>
					<Panel>
						<!-- This is flipped (scaleY(-1)) for the elevation brush effect
                        -->
						<Border
                          Name="PART_BorderElement"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          MinWidth="{TemplateBinding MinWidth}"
                          MinHeight="{TemplateBinding MinHeight}"
                          RenderTransform="scaleY(-1)"
						  CornerRadius="{TemplateBinding CornerRadius}"/>

						<Border
                          Margin="{TemplateBinding BorderThickness}">
							<Grid ColumnDefinitions="Auto,*,Auto" >
								<ContentPresenter Grid.Column="0" Grid.ColumnSpan="1" Content="{TemplateBinding InnerLeftContent}"/>
								<DockPanel x:Name="PART_InnerDockPanel" Grid.Column="1" Grid.ColumnSpan="1" Margin="{TemplateBinding Padding}">
									<TextBlock Name="PART_FloatingWatermark"
                                               Foreground="{DynamicResource SystemAccentColor}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Text="{TemplateBinding Watermark}"
                                               DockPanel.Dock="Top" />
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                                  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
										<Panel>
											<TextBlock Name="PART_Watermark"
                                                    Text="{TemplateBinding Watermark}"
                                                    TextAlignment="{TemplateBinding TextAlignment}"
                                                    TextWrapping="{TemplateBinding TextWrapping}"
                                                    IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    IsHitTestVisible="False"/>
											<TextPresenter Name="PART_TextPresenter" FontFamily="微软雅黑"
                                                          Text="{TemplateBinding Text,Mode=TwoWay}"
                                                          CaretIndex="{TemplateBinding CaretIndex}"
                                                          SelectionStart="{TemplateBinding SelectionStart}"
                                                          SelectionEnd="{TemplateBinding SelectionEnd}"
                                                          TextAlignment="{TemplateBinding TextAlignment}"
                                                          TextWrapping="{TemplateBinding TextWrapping}"
                                                          PasswordChar="{TemplateBinding PasswordChar}"
                                                          RevealPassword="{TemplateBinding RevealPassword}"
                                                          SelectionBrush="{TemplateBinding SelectionBrush}"
                                                          SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                          CaretBrush="{TemplateBinding CaretBrush}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Panel>
									</ScrollViewer>
								</DockPanel>
								<ContentPresenter Grid.Column="2" Grid.ColumnSpan="1" Content="{TemplateBinding InnerRightContent}"/>
							</Grid>
						</Border>
					</Panel>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="TextBox /template/ TextBlock#PART_Watermark, TextBox /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForeground}" />
	</Style>

	<!-- Disabled State -->
	<Style Selector="TextBox:disabled">
		<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
	</Style>

	<Style Selector="TextBox:disabled /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushDisabled}" />
	</Style>

	<Style Selector="TextBox:disabled /template/ TextBlock#PART_Watermark, TextBox:disabled /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}" />
	</Style>

	<Style Selector="TextBox:pointerover">
		<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}" />
	</Style>

	<Style Selector="TextBox:pointerover /template/ Border#PART_BorderElement">
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
		<Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}" />
	</Style>

	<Style Selector="TextBox:pointerover /template/ TextBlock#PART_Watermark, TextBox:pointerover /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}" />
	</Style>

	<!-- Focused State -->
	<Style Selector="TextBox:focus">
		<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}" />
	</Style>

	<Style Selector="TextBox:focus /template/ TextBlock#PART_Watermark, TextBox:focus /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundFocused}" />
	</Style>

	<Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
	</Style>

	<Style Selector="TextBox:error /template/ Border#PART_BorderElement">
		<Setter Property="BorderBrush" Value="{DynamicResource SystemFillColorCriticalBrush}"/>
	</Style>

	<Style Selector="TextBox /template/ DockPanel#PART_InnerDockPanel">
		<Setter Property="Cursor" Value="IBeam" />
	</Style>

	<Style Selector="TextBox /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="IsVisible" Value="False" />
	</Style>
	<Style Selector="TextBox[UseFloatingWatermark=true]:not(TextBox:empty) /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="IsVisible" Value="True" />
	</Style>

	<Style Selector="TextBox.revealPasswordButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
		<Setter Property="InnerRightContent">
			<Template>
				<ToggleButton Classes="passwordBoxRevealButton"
                              IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}" />
			</Template>
		</Setter>
	</Style>

	<Style Selector="TextBox.clearButton[AcceptsReturn=False][IsReadOnly=False]:focus:not(TextBox:empty)">
		<Setter Property="InnerRightContent">
			<Template>
				<Button Classes="textBoxClearButton"
                        Command="{Binding $parent[TextBox].Clear}" />
			</Template>
		</Setter>
	</Style>

	<Style Selector="ToggleButton.passwordBoxRevealButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="PART_ButtonLayoutBorder"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
									 Name="Glyph" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style Selector="ToggleButton.passwordBoxRevealButton /template/ ui|FontIcon#Glyph">
		<Setter Property="Glyph" Value="&#xE18B;" />
	</Style>

	<Style Selector="Button.textBoxClearButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="PART_ButtonLayoutBorder"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<ui:SymbolIcon Symbol="Dismiss"
									   Name="Glyph"
									   FontSize="12"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TextBox.Button Normal State -->
	<Style Selector="Button.textBoxClearButton, ToggleButton.passwordBoxRevealButton">
		<Setter Property="Width" Value="30" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="{DynamicResource TextBoxInnerButtonMargin}" />
	</Style>
	<Style Selector="Button.textBoxClearButton /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.passwordBoxRevealButton /template/ Border#PART_ButtonLayoutBorder">
		<Setter Property="Background" Value="{DynamicResource TextControlButtonBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrush}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
	</Style>
	<Style Selector="Button.textBoxClearButton /template/ ui|SymbolIcon#Glyph,
                   ToggleButton.passwordBoxRevealButton /template/ ui|FontIcon#Glyph">
		<Setter Property="Foreground" Value="{DynamicResource TextControlButtonForeground}" />
	</Style>

	<!-- TextBox.Button PointerOver State -->
	<Style Selector="Button.textBoxClearButton:pointerover /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.passwordBoxRevealButton:pointerover /template/ Border#PART_ButtonLayoutBorder">
		<Setter Property="Background" Value="{DynamicResource TextControlButtonBackgroundPointerOver}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}" />
	</Style>
	<Style Selector="Button.textBoxClearButton:pointerover /template/ ui|SymbolIcon#Glyph,
                   ToggleButton.passwordBoxRevealButton:pointerover /template/ ui|FontIcon#Glyph">
		<Setter Property="Foreground" Value="{DynamicResource TextControlButtonForegroundPointerOver}" />
	</Style>

	<!-- TextBox.Button Pressed State -->
	<Style Selector="Button.textBoxClearButton:pressed /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.passwordBoxRevealButton:pressed /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.passwordBoxRevealButton:checked /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.passwordBoxRevealButton:indeterminate /template/ Border#PART_ButtonLayoutBorder">
		<Setter Property="Background" Value="{DynamicResource TextControlButtonBackgroundPressed}" />
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPressed}" />
	</Style>

	<Style Selector="Button.textBoxClearButton:pressed /template/ ui|SymbolIcon#Glyph,
                   ToggleButton.passwordBoxRevealButton:pressed /template/ ui|FontIcon#Glyph">
		<Setter Property="Foreground" Value="{DynamicResource TextControlButtonForegroundPressed}" />
	</Style>

	<!-- TextBox.Button Disabled State -->
	<Style Selector="Button.textBoxClearButton:disabled /template/ Border#PART_ButtonLayoutBorder,
                   ToggleButton.passwordBoxRevealButton:disabled /template/ Border#PART_ButtonLayoutBorder">
		<Setter Property="Opacity" Value="0" />
	</Style>

	<!--
	TODO: Add "eye_hide" to font & re-enable this, tho for now this matches WinUI
	<Style Selector="ToggleButton.passwordBoxRevealButton:checked /template/ ui|FontIcon#Glyph">
		<Setter Property="Glyph" Value="&#xF3FC;" />
	</Style>-->
</Styles>